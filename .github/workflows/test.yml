name: tests

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    name: tests
    runs-on: ubuntu-latest
    environment: Development
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
      AWS_ENDPOINT_URL: ${{ vars.AWS_ENDPOINT_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.4"

      - name: Prepare dependencies
        run: |
          go mod download

      # - name: Setup DynamoDB Local
      #   uses: rrainn/dynamodb-action@v4.0.0
      #   with:
      #     dbPath: # undefined by default, if this is undefined inMemory will be used
      #     sharedDb: # undefined by default
      #     delayTransientStatuses: # undefined by default
      #     optimizeDbBeforeStartup: # undefined by default
      #     port: 8000
      #     cors: '*'

      # - name: Add Tables to DynamoDB Local
      #   run : |
      #     aws dynamodb create-table --cli-input-json file://./dynamodb/table-definitions/users.json --endpoint-url ${{ env.AWS_ENDPOINT_URL }}
      #     aws dynamodb create-table --cli-input-json file://./dynamodb/table-definitions/tasks.json --endpoint-url ${{ env.AWS_ENDPOINT_URL }}
      #     aws dynamodb create-table --cli-input-json file://./dynamodb/table-definitions/events.json --endpoint-url ${{ env.AWS_ENDPOINT_URL }}

      - name: Run API in background docker container
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          docker build -t your-grpc-server --build-arg JWT_SECRET=${{ env.JWT_SECRET }} . 
          docker run -p 9001:9001 your-grpc-server &

      - name: Test code
        run: |
          make test
